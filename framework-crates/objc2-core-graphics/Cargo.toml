# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-core-graphics"
version.workspace = true
description = "Bindings to the CoreGraphics framework"
edition.workspace = true
rust-version.workspace = true
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories.workspace = true
repository.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
bitflags = { version = "2.5.0", default-features = false, optional = true }
block2 = { path = "../../crates/block2", version = "0.5.1", default-features = false, optional = true }
libc = { version = "0.2.80", default-features = false, optional = true }
objc2 = { path = "../../crates/objc2", version = "0.5.2", default-features = false }
objc2-core-foundation = { path = "../objc2-core-foundation", version = "0.2.2", default-features = false, optional = true }

[target.'cfg(not(target_os = "watchos"))'.dependencies]
objc2-io-surface = { path = "../objc2-io-surface", version = "0.2.2", default-features = false, optional = true }
objc2-metal = { path = "../objc2-metal", version = "0.2.2", default-features = false, optional = true }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "bitflags?/std", "block2?/std", "libc?/std", "objc2/std", "objc2-core-foundation?/std", "objc2-io-surface?/std", "objc2-metal?/std"]
alloc = ["block2?/alloc", "objc2/alloc", "objc2-core-foundation?/alloc", "objc2-io-surface?/alloc", "objc2-metal?/alloc"]
bitflags = ["dep:bitflags", "objc2-core-foundation?/bitflags", "objc2-io-surface?/bitflags", "objc2-metal?/bitflags"]
block2 = ["dep:block2", "objc2-core-foundation?/block2", "objc2-metal?/block2"]
libc = ["dep:libc", "objc2-core-foundation?/libc", "objc2-io-surface?/libc"]
objc2-core-foundation = ["dep:objc2-core-foundation", "objc2-io-surface?/objc2-core-foundation", "objc2-metal?/objc2-core-foundation"]
objc2-io-surface = ["dep:objc2-io-surface", "objc2-metal?/objc2-io-surface"]
objc2-metal = ["dep:objc2-metal"]

CGAffineTransform = ["objc2-core-foundation?/CFCGTypes"]
CGBase = []
CGBitmapContext = []
CGColor = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
]
CGColorConversionInfo = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFDictionary",
    "objc2-core-foundation?/CFError",
]
CGColorSpace = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFData",
    "objc2-core-foundation?/CFDictionary",
]
CGContext = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
]
CGConvertColorDataWithFormat = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
]
CGDataConsumer = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFData",
    "objc2-core-foundation?/CFURL",
]
CGDataProvider = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFData",
    "objc2-core-foundation?/CFURL",
]
CGDirectDisplay = [
    "bitflags",
    "objc2-core-foundation?/CFArray",
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
]
CGDirectDisplayMetal = ["objc2-metal?/MTLDevice"]
CGDirectPalette = []
CGDisplayConfiguration = [
    "bitflags",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
]
CGDisplayFade = []
CGDisplayStream = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
    "objc2-core-foundation?/CFRunLoop",
    "objc2-io-surface?/IOSurfaceRef",
]
CGEXRToneMappingGamma = ["objc2-core-foundation?/CFBase"]
CGError = []
CGEvent = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFData",
    "objc2-core-foundation?/CFMachPort",
]
CGEventSource = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFDate",
]
CGEventTypes = ["bitflags"]
CGFont = [
    "objc2-core-foundation?/CFArray",
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFData",
    "objc2-core-foundation?/CFDictionary",
]
CGFunction = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
]
CGGeometry = [
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
]
CGGradient = [
    "bitflags",
    "objc2-core-foundation?/CFArray",
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
]
CGITUToneMapping = ["objc2-core-foundation?/CFBase"]
CGImage = [
    "bitflags",
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
]
CGLayer = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
]
CGPDFArray = ["objc2-core-foundation?/CFCGTypes"]
CGPDFContentStream = ["objc2-core-foundation?/CFArray"]
CGPDFContext = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFData",
    "objc2-core-foundation?/CFDictionary",
    "objc2-core-foundation?/CFURL",
]
CGPDFDictionary = ["objc2-core-foundation?/CFCGTypes"]
CGPDFDocument = [
    "bitflags",
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDictionary",
    "objc2-core-foundation?/CFURL",
]
CGPDFObject = ["objc2-core-foundation?/CFCGTypes"]
CGPDFOperatorTable = []
CGPDFPage = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
]
CGPDFScanner = ["objc2-core-foundation?/CFCGTypes"]
CGPDFStream = ["objc2-core-foundation?/CFData"]
CGPDFString = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFDate",
]
CGPSConverter = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFDictionary",
]
CGPath = [
    "objc2-core-foundation?/CFArray",
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
]
CGPattern = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
]
CGRemoteOperation = [
    "bitflags",
    "objc2-core-foundation?/CFCGTypes",
    "objc2-core-foundation?/CFDate",
    "objc2-core-foundation?/CFMachPort",
]
CGSession = ["objc2-core-foundation?/CFDictionary"]
CGShading = [
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
]
CGToneMapping = []
CGWindow = [
    "bitflags",
    "objc2-core-foundation?/CFArray",
    "objc2-core-foundation?/CFBase",
    "objc2-core-foundation?/CFCGTypes",
]
CGWindowLevel = []
all = [
    "CGAffineTransform",
    "CGBase",
    "CGBitmapContext",
    "CGColor",
    "CGColorConversionInfo",
    "CGColorSpace",
    "CGContext",
    "CGConvertColorDataWithFormat",
    "CGDataConsumer",
    "CGDataProvider",
    "CGDirectDisplay",
    "CGDirectDisplayMetal",
    "CGDirectPalette",
    "CGDisplayConfiguration",
    "CGDisplayFade",
    "CGDisplayStream",
    "CGEXRToneMappingGamma",
    "CGError",
    "CGEvent",
    "CGEventSource",
    "CGEventTypes",
    "CGFont",
    "CGFunction",
    "CGGeometry",
    "CGGradient",
    "CGITUToneMapping",
    "CGImage",
    "CGLayer",
    "CGPDFArray",
    "CGPDFContentStream",
    "CGPDFContext",
    "CGPDFDictionary",
    "CGPDFDocument",
    "CGPDFObject",
    "CGPDFOperatorTable",
    "CGPDFPage",
    "CGPDFScanner",
    "CGPDFStream",
    "CGPDFString",
    "CGPSConverter",
    "CGPath",
    "CGPattern",
    "CGRemoteOperation",
    "CGSession",
    "CGShading",
    "CGToneMapping",
    "CGWindow",
    "CGWindowLevel",
    "bitflags",
    "block2",
    "libc",
    "objc2-core-foundation",
    "objc2-io-surface",
    "objc2-metal",
]
